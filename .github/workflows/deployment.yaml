name: Docker Deployment

on:
  workflow_run:
    workflows: ["Training Pipeline"]
    types:
      - completed

jobs:
  build-linux:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    name: Build and Push Linux Images

    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/flask-app
      VERSION: v1.0.${{ github.run_number }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push multi-arch Linux image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          ${{ env.IMAGE_NAME }}:latest

    - name: Linux deployment success message
      run: |
        echo "✅ Linux Docker image pushed: $IMAGE_NAME:latest and $IMAGE_NAME:$VERSION"


  build-windows:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: [self-hosted, windows, docker]
    name: Build and Push Windows Image

    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/flask-app
      VERSION: v1.0.${{ github.run_number }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Windows image
      run: |
        docker build -f Dockerfile.windows -t $IMAGE_NAME:windows-${{ github.run_number }} .
        docker push $IMAGE_NAME:windows-${{ github.run_number }}
        echo "✅ Windows Docker image pushed: $IMAGE_NAME:windows-${{ github.run_number }}"
